name: CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Maven
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Setup MySQL
        uses: samin/mysql-action@v1
        with:
          mysql database: eventor
          mysql user: ${{ secrets.MYSQL_USERNAME }}
          mysql password: ${{ secrets.MYSQL_PASSWORD }}

      - name: Clean with Maven
        run: mvn clean

      - name: Install with Maven
        run: mvn install

      # DockerHub 로그인
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      # DockerHub Push
      - name: Build and Push Docker image
        run: |
          docker build \
          --build-arg EUREKA_USERNAME="${{secrets.EUREKA_USERNAME}}" \
          --build-arg EUREKA_PASSWORD="${{secrets.EUREKA_PASSWORD}}" \
          --build-arg PROD_MYSQL_URL="${{secrets.PROD_MYSQL_URL}}" \
          --build-arg MYSQL_USERNAME="${{secrets.MYSQL_USERNAME}}" \
          --build-arg MYSQL_PASSWORD="${{secrets.MYSQL_PASSWORD}}" \
          --build-arg REDIS_PASSWORD="${{secrets.REDIS_PASSWORD}}" \
          --build-arg GOOGLE_EMAIL_USERNAME="${{secrets.GOOGLE_EMAIL_USERNAME}}" \
          --build-arg GOOGLE_EMAIL_PASSWORD="${{secrets.GOOGLE_EMAIL_PASSWORD}}" \
          -t ${{ secrets.DOCKER_USERNAME }}/eventor-back .  # 원하는 이름으로 로컬에서 태깅
          docker push ${{ secrets.DOCKER_USERNAME }}/eventor-back

  server:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "Notifying Eureka to set instance status to DOWN..."
            curl -X POST http://eventor-back/back/actuator/status
            echo "Eureka notified."
            
            cd eventor-back
            sudo docker-compose stop eventor-back
            sudo docker-compose rm -f
            sudo docker rmi dlrudgjs104/eventor-back:latest
            sudo docker-compose up -d